import pandas as pd
import datetime as dt
import matplotlib.pyplot as plt
import calendar as cd
dataset=pd.read_csv("C://1/AP/Lab1/dataset.csv", header=None, names=["Date", "Course"])
print(dataset)


def NormalDataset(dataset:pd.DataFrame)->pd.DataFrame:
    '''Убираем NaN, добавляем медиану и ср знач'''
    dataset.replace("None",pd.NaT)
    dataset.dropna(inplace=True, ignore_index=True)
    """До 1998 был советский рубль который в 1000 раз меньше современного"""
    for i in range(len(dataset["Date"])):
        if dataset["Date"][i][:4] in map(str,range(1992,1998)):
            dataset.loc[i,"Course"]/=1000
    median=dataset["Course"].median()
    mean=dataset["Course"].mean()
    print(median)
    print(mean)
    dataset["Relative_median"]=dataset.apply(lambda row: abs(row["Course"]-median),axis=1)
    dataset["Relative_mean"]=dataset.apply(lambda row: abs(row["Course"]-mean),axis=1)
    dataset = dataset.sort_values(by="Date", ignore_index=True)
    return dataset
dataset=NormalDataset(dataset)
print(dataset)


def FindCourseRelativeMean(dataset:pd.DataFrame, value:float)->pd.DataFrame:
    '''Возвращает датасет в котором, значение отклонения от курса >= заданного значения'''
    return dataset.query('Relative_mean >= @value')
print(FindCourseRelativeMean(dataset,40.0))


def FindCourseInTimeInterval(dataset:pd.DataFrame, first_date:dt.date, last_date:dt.date)->pd.DataFrame:
    '''Возвращает датасет в котором, дата удовлетворяет начальная дата <= дата <= конечная дата'''
    return dataset.query('Date >= @first_date and Date <= @last_date')
print(FindCourseInTimeInterval(dataset, "2020-01-01", "2023-01-01"))


def GroupByMonth(dataset:pd.DataFrame)->pd.DataFrame:
    dataset['Date'] = pd.to_datetime(dataset['Date'], errors='coerce')
    return dataset.groupby([(dataset["Date"].dt.year), (dataset["Date"].dt.month)]).mean()
print(GroupByMonth(dataset))


def MakePlot(dataset:pd.DataFrame)->None:
    '''График курса за весь период'''
    fig = plt.figure(figsize=(15, 5))
    plt.ylabel('Value')
    plt.xlabel('Date')
    plt.title('Course')
    x = dataset["Date"]
    y = dataset["Course"]
    y1 = dataset["Course"].mean()
    y2 = dataset["Course"].median()
    plt.scatter(x, y, color='blue', linestyle='-', linewidths=1)
    plt.axhline (y1, color='red', linestyle='--', label='Mean')
    plt.axhline (y2, color='pink', linestyle='--', label='Median') 
    plt.legend()
    plt.show()
MakePlot(dataset)


def MakePlotForMonth(dataset:pd.DataFrame, year:int, month:int)->None:
    '''График курса за один месяц'''
    fig = plt.figure(figsize=(15, 5))
    plt.ylabel('Value')
    plt.xlabel('Date')
    plt.title('Course')
    _, last_day = cd.monthrange(year, month)
    first = str(dt.date(year, month, 1))
    last = str(dt.date(year, month, last_day))
    new_df = FindCourseInTimeInterval(dataset, first, last)
    x = new_df["Date"]
    y = new_df["Course"]
    y1 = new_df["Course"].mean()
    y2 = new_df["Course"].median()
    plt.scatter(x, y, color='blue', linestyle='-', linewidths=1)
    plt.axhline (y1, color='red', linestyle='--', label='Mean')
    plt.axhline (y2, color='pink', linestyle='--', label='Median') 
    plt.legend()
    plt.show()
MakePlotForMonth(dataset, 2020, 8)